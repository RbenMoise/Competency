{"ast":null,"code":"// utils/auth.js\nimport { jwtDecode } from \"jwt-decode\";\nexport function getUserFromToken() {\n  try {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return null;\n    const decoded = jwtDecode(token); // uses the jwt-decode library\n    // console.log(\"Decoded User:\", decoded); // Should show name, role, id\n    return decoded;\n  } catch (err) {\n    console.error(\"Token decoding failed:\", err);\n    return null;\n  }\n}","map":{"version":3,"names":["jwtDecode","getUserFromToken","token","localStorage","getItem","decoded","err","console","error"],"sources":["/Volumes/Rben/Repos/Spider_chart/frontend/src/utils/auth.js"],"sourcesContent":["// utils/auth.js\nimport { jwtDecode } from \"jwt-decode\";\n\nexport function getUserFromToken() {\n  try {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return null;\n\n    const decoded = jwtDecode(token); // uses the jwt-decode library\n    // console.log(\"Decoded User:\", decoded); // Should show name, role, id\n    return decoded;\n  } catch (err) {\n    console.error(\"Token decoding failed:\", err);\n    return null;\n  }\n}\n"],"mappings":"AAAA;AACA,SAASA,SAAS,QAAQ,YAAY;AAEtC,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EACjC,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE,OAAO,IAAI;IAEvB,MAAMG,OAAO,GAAGL,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC;IAClC;IACA,OAAOG,OAAO;EAChB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC5C,OAAO,IAAI;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}