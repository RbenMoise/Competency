{"ast":null,"code":"var _jsxFileName = \"/Volumes/Rben/Repos/Spider_chart/frontend/src/components/Modern/SpiderChart.js\";\nimport React from \"react\";\nimport { Radar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, RadialLinearScale, PointElement, LineElement, Filler, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(RadialLinearScale, PointElement, LineElement, Filler, Tooltip, Legend);\nconst SpiderChart = ({\n  currentScores,\n  projectedScores,\n  supervisorScores,\n  categories\n}) => {\n  const data = {\n    labels: categories,\n    datasets: [{\n      label: \"Current Scores\",\n      data: categories.map(cat => currentScores[cat] || 0),\n      backgroundColor: \"rgba(156, 202, 13, 0.2)\",\n      borderColor: \"#9cca0d\",\n      borderWidth: 2,\n      pointBackgroundColor: \"#9cca0d\"\n    }, ...(projectedScores ? [{\n      label: \"Projected Scores\",\n      data: categories.map(cat => projectedScores[cat] || 0),\n      backgroundColor: \"rgba(226, 72, 58, 0.2)\",\n      borderColor: \"#e2483a\",\n      borderWidth: 2,\n      pointBackgroundColor: \"#e2483a\"\n    }] : []), ...(supervisorScores ? [{\n      label: \"Supervisor Assessment\",\n      data: categories.map(cat => supervisorScores[cat] || 0),\n      backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n      borderColor: \"#36a2eb\",\n      borderWidth: 2,\n      pointBackgroundColor: \"#36a2eb\"\n    }] : [])]\n  };\n  const options = {\n    responsive: true,\n    scales: {\n      r: {\n        beginAtZero: true,\n        max: 5,\n        ticks: {\n          stepSize: 1\n        },\n        grid: {\n          color: \"#e0e0e0\"\n        },\n        angleLines: {\n          color: \"#e0e0e0\"\n        }\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: context => `${context.dataset.label}: ${context.raw}`\n        }\n      },\n      legend: {\n        display: false // Handled by custom legend in SupervisorSpiderChart\n      }\n    },\n    animation: {\n      duration: 1000,\n      easing: \"easeOutQuart\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spider-chart\",\n    children: /*#__PURE__*/_jsxDEV(Radar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_c = SpiderChart;\nexport default SpiderChart;\nvar _c;\n$RefreshReg$(_c, \"SpiderChart\");","map":{"version":3,"names":["React","Radar","Chart","ChartJS","RadialLinearScale","PointElement","LineElement","Filler","Tooltip","Legend","jsxDEV","_jsxDEV","register","SpiderChart","currentScores","projectedScores","supervisorScores","categories","data","labels","datasets","label","map","cat","backgroundColor","borderColor","borderWidth","pointBackgroundColor","options","responsive","scales","r","beginAtZero","max","ticks","stepSize","grid","color","angleLines","plugins","tooltip","callbacks","context","dataset","raw","legend","display","animation","duration","easing","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Volumes/Rben/Repos/Spider_chart/frontend/src/components/Modern/SpiderChart.js"],"sourcesContent":["import React from \"react\";\nimport { Radar } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\nChartJS.register(\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Tooltip,\n  Legend\n);\n\nconst SpiderChart = ({\n  currentScores,\n  projectedScores,\n  supervisorScores,\n  categories,\n}) => {\n  const data = {\n    labels: categories,\n    datasets: [\n      {\n        label: \"Current Scores\",\n        data: categories.map((cat) => currentScores[cat] || 0),\n        backgroundColor: \"rgba(156, 202, 13, 0.2)\",\n        borderColor: \"#9cca0d\",\n        borderWidth: 2,\n        pointBackgroundColor: \"#9cca0d\",\n      },\n      ...(projectedScores\n        ? [\n            {\n              label: \"Projected Scores\",\n              data: categories.map((cat) => projectedScores[cat] || 0),\n              backgroundColor: \"rgba(226, 72, 58, 0.2)\",\n              borderColor: \"#e2483a\",\n              borderWidth: 2,\n              pointBackgroundColor: \"#e2483a\",\n            },\n          ]\n        : []),\n      ...(supervisorScores\n        ? [\n            {\n              label: \"Supervisor Assessment\",\n              data: categories.map((cat) => supervisorScores[cat] || 0),\n              backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n              borderColor: \"#36a2eb\",\n              borderWidth: 2,\n              pointBackgroundColor: \"#36a2eb\",\n            },\n          ]\n        : []),\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    scales: {\n      r: {\n        beginAtZero: true,\n        max: 5,\n        ticks: {\n          stepSize: 1,\n        },\n        grid: {\n          color: \"#e0e0e0\",\n        },\n        angleLines: {\n          color: \"#e0e0e0\",\n        },\n      },\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: (context) => `${context.dataset.label}: ${context.raw}`,\n        },\n      },\n      legend: {\n        display: false, // Handled by custom legend in SupervisorSpiderChart\n      },\n    },\n    animation: {\n      duration: 1000,\n      easing: \"easeOutQuart\",\n    },\n  };\n\n  return (\n    <div className=\"spider-chart\">\n      <Radar data={data} options={options} />\n    </div>\n  );\n};\n\nexport default SpiderChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}