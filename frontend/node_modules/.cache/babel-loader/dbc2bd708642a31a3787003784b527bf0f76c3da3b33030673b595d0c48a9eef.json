{"ast":null,"code":"var _jsxFileName = \"/Volumes/Rben/Repos/Spider_chart/frontend/src/components/ScoreInput/ScoreFormManager.js\",\n  _s = $RefreshSig$();\n// src/components/ScoreFormManager.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport InputForm from \"./ScoreInput\"; // Adjust path as needed\nimport \"./ScoreInput.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ScoreFormManager({\n  categories,\n  onScoresChange\n}) {\n  _s();\n  const [currentScores, setCurrentScores] = useState(Object.fromEntries(categories.map(cat => [cat, 0])));\n  const [projectedScores, setProjectedScores] = useState(Object.fromEntries(categories.map(cat => [cat, 0])));\n  const [sending, setSending] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  // Update parent component with scores whenever they change\n  React.useEffect(() => {\n    onScoresChange({\n      currentScores,\n      projectedScores\n    });\n  }, [currentScores, projectedScores, onScoresChange]);\n  const handleScoreChange = setter => e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const val = Math.min(5, Math.max(0, parseInt(value) || 0));\n    setter(prev => ({\n      ...prev,\n      [name]: val\n    }));\n  };\n  const handleSendScores = async () => {\n    setSending(true);\n    setMessage(\"\");\n\n    // const token = localStorage.getItem(\"token\");\n    console.log(\"Token being sent:\", token);\n    console.log(\"Current Scores:\", currentScores);\n    console.log(\"Projected Scores:\", projectedScores);\n\n    // ✅ Validate that all fields are filled (non-zero or required)\n    const isValidScore = val => typeof val === \"number\" && !isNaN(val) && val > 0 && val <= 5;\n    const allCurrentFilled = Object.values(currentScores).every(isValidScore);\n    const allProjectedFilled = Object.values(projectedScores).every(isValidScore);\n    if (!allCurrentFilled || !allProjectedFilled) {\n      setMessage(\"⚠️ Please fill in **all** fields with a score between 1 and 5.\");\n      setSending(false);\n      return;\n    }\n    if (!token) {\n      setMessage(\"No token found. Please log in first.\");\n      setSending(false);\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:4000/api/scores\", {\n        current: currentScores,\n        projected: projectedScores\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200 || response.status === 201) {\n        setMessage(\"✅ Scores submitted successfully!\");\n      } else {\n        setMessage(\"⚠️ Something went wrong. Please try again.\");\n      }\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error(\"Error submitting scores:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      const status = (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status;\n      if (status === 403) {\n        localStorage.removeItem(\"token\");\n        window.location.href = \"/login\";\n      }\n      setMessage(status === 403 ? \"🚫 Session expired or invalid token. Please log in again.\" : status === 409 ? \"❌ You have already submitted scores.\" : \"❌ Error submitting scores. Try again.\");\n    } finally {\n      setSending(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(InputForm, {\n      title: \"CURRENT STATE (JUNE 2025)\",\n      scores: currentScores,\n      onChange: handleScoreChange(setCurrentScores),\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      title: \"TARGET FOR 2027\",\n      scores: projectedScores,\n      onChange: handleScoreChange(setProjectedScores),\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modern-button send-btn\",\n        onClick: handleSendScores,\n        disabled: sending,\n        children: sending ? \"Sending...\" : \"Send Scores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ScoreFormManager, \"2Dbf3F3XVu0BDH0HU2pTUsKqJVY=\");\n_c = ScoreFormManager;\nvar _c;\n$RefreshReg$(_c, \"ScoreFormManager\");","map":{"version":3,"names":["React","useState","axios","InputForm","jsxDEV","_jsxDEV","Fragment","_Fragment","ScoreFormManager","categories","onScoresChange","_s","currentScores","setCurrentScores","Object","fromEntries","map","cat","projectedScores","setProjectedScores","sending","setSending","message","setMessage","useEffect","handleScoreChange","setter","e","name","value","target","val","Math","min","max","parseInt","prev","handleSendScores","console","log","token","isValidScore","isNaN","allCurrentFilled","values","every","allProjectedFilled","response","post","current","projected","headers","Authorization","status","error","_error$response","_error$response2","data","localStorage","removeItem","window","location","href","children","title","scores","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","_c","$RefreshReg$"],"sources":["/Volumes/Rben/Repos/Spider_chart/frontend/src/components/ScoreInput/ScoreFormManager.js"],"sourcesContent":["// src/components/ScoreFormManager.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport InputForm from \"./ScoreInput\"; // Adjust path as needed\nimport \"./ScoreInput.css\";\n\nexport default function ScoreFormManager({ categories, onScoresChange }) {\n  const [currentScores, setCurrentScores] = useState(\n    Object.fromEntries(categories.map((cat) => [cat, 0]))\n  );\n  const [projectedScores, setProjectedScores] = useState(\n    Object.fromEntries(categories.map((cat) => [cat, 0]))\n  );\n  const [sending, setSending] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  // Update parent component with scores whenever they change\n  React.useEffect(() => {\n    onScoresChange({ currentScores, projectedScores });\n  }, [currentScores, projectedScores, onScoresChange]);\n\n  const handleScoreChange = (setter) => (e) => {\n    const { name, value } = e.target;\n    const val = Math.min(5, Math.max(0, parseInt(value) || 0));\n    setter((prev) => ({ ...prev, [name]: val }));\n  };\n\n  const handleSendScores = async () => {\n    setSending(true);\n    setMessage(\"\");\n\n    // const token = localStorage.getItem(\"token\");\n    console.log(\"Token being sent:\", token);\n    console.log(\"Current Scores:\", currentScores);\n    console.log(\"Projected Scores:\", projectedScores);\n\n    // ✅ Validate that all fields are filled (non-zero or required)\n    const isValidScore = (val) =>\n      typeof val === \"number\" && !isNaN(val) && val > 0 && val <= 5;\n\n    const allCurrentFilled = Object.values(currentScores).every(isValidScore);\n    const allProjectedFilled =\n      Object.values(projectedScores).every(isValidScore);\n\n    if (!allCurrentFilled || !allProjectedFilled) {\n      setMessage(\n        \"⚠️ Please fill in **all** fields with a score between 1 and 5.\"\n      );\n      setSending(false);\n      return;\n    }\n\n    if (!token) {\n      setMessage(\"No token found. Please log in first.\");\n      setSending(false);\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:4000/api/scores\",\n        {\n          current: currentScores,\n          projected: projectedScores,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      if (response.status === 200 || response.status === 201) {\n        setMessage(\"✅ Scores submitted successfully!\");\n      } else {\n        setMessage(\"⚠️ Something went wrong. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting scores:\", error.response?.data);\n      const status = error.response?.status;\n\n      if (status === 403) {\n        localStorage.removeItem(\"token\");\n        window.location.href = \"/login\";\n      }\n\n      setMessage(\n        status === 403\n          ? \"🚫 Session expired or invalid token. Please log in again.\"\n          : status === 409\n          ? \"❌ You have already submitted scores.\"\n          : \"❌ Error submitting scores. Try again.\"\n      );\n    } finally {\n      setSending(false);\n    }\n  };\n\n  return (\n    <>\n      {\" \"}\n      <InputForm\n        title=\"CURRENT STATE (JUNE 2025)\"\n        scores={currentScores}\n        onChange={handleScoreChange(setCurrentScores)}\n        categories={categories}\n      />\n      <InputForm\n        title=\"TARGET FOR 2027\"\n        scores={projectedScores}\n        onChange={handleScoreChange(setProjectedScores)}\n        categories={categories}\n      />\n      <div className=\"submit-section\">\n        <button\n          className=\"modern-button send-btn\"\n          onClick={handleSendScores}\n          disabled={sending}\n        >\n          {sending ? \"Sending...\" : \"Send Scores\"}\n        </button>\n        {message && <p className=\"status-message\">{message}</p>}\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}