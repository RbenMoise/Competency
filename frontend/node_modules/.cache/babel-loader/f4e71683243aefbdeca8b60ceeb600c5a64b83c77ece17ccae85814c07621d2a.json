{"ast":null,"code":"var _jsxFileName = \"/Volumes/Rben/Repos/Spider_chart/frontend/src/components/Modern/SpiderChart.js\";\nimport React from \"react\";\nimport { Radar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, RadialLinearScale, PointElement, LineElement, Filler, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(RadialLinearScale, PointElement, LineElement, Filler, Tooltip, Legend);\nconst SpiderChart = ({\n  currentScores,\n  projectedScores,\n  categories\n}) => {\n  const data = {\n    labels: categories,\n    datasets: [{\n      label: \"Current State\",\n      data: categories.map(cat => currentScores[cat]),\n      backgroundColor: \"rgba(54, 162, 235, 0.4)\",\n      borderColor: \"rgba(54, 162, 235, 1)\",\n      pointBackgroundColor: \"rgba(54, 162, 235, 1)\"\n    }, {\n      label: \"Projected State\",\n      data: categories.map(cat => projectedScores[cat]),\n      backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n      borderColor: \"rgba(255, 99, 132, 1)\",\n      pointBackgroundColor: \"rgba(255, 99, 132, 1)\"\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      r: {\n        min: 0,\n        max: 5,\n        ticks: {\n          stepSize: 1,\n          backdropColor: 'rgba(0, 0, 0, 0)'\n        },\n        pointLabels: {\n          font: {\n            size: 14,\n            weight: 'bold',\n            family: \"'Gill Sans', Tahoma, Geneva, Verdana, sans-serif\"\n          },\n          color: '#333'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n        labels: {\n          font: {\n            size: 15\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    style: {\n      height: '400px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Radar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_c = SpiderChart;\nexport default SpiderChart;\nvar _c;\n$RefreshReg$(_c, \"SpiderChart\");","map":{"version":3,"names":["React","Radar","Chart","ChartJS","RadialLinearScale","PointElement","LineElement","Filler","Tooltip","Legend","jsxDEV","_jsxDEV","register","SpiderChart","currentScores","projectedScores","categories","data","labels","datasets","label","map","cat","backgroundColor","borderColor","pointBackgroundColor","options","responsive","maintainAspectRatio","scales","r","min","max","ticks","stepSize","backdropColor","pointLabels","font","size","weight","family","color","plugins","legend","position","className","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Volumes/Rben/Repos/Spider_chart/frontend/src/components/Modern/SpiderChart.js"],"sourcesContent":["import React from \"react\";\nimport { Radar } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\nChartJS.register(\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Tooltip,\n  Legend\n);\n\nconst SpiderChart = ({ currentScores, projectedScores, categories }) => {\n  const data = {\n    labels: categories,\n    datasets: [\n      {\n        label: \"Current State\",\n        data: categories.map((cat) => currentScores[cat]),\n        backgroundColor: \"rgba(54, 162, 235, 0.4)\",\n        borderColor: \"rgba(54, 162, 235, 1)\",\n        pointBackgroundColor: \"rgba(54, 162, 235, 1)\",\n      },\n      {\n        label: \"Projected State\",\n        data: categories.map((cat) => projectedScores[cat]),\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"rgba(255, 99, 132, 1)\",\n        pointBackgroundColor: \"rgba(255, 99, 132, 1)\",\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      r: {\n        min: 0,\n        max: 5,\n        ticks: {\n          stepSize: 1,\n          backdropColor: 'rgba(0, 0, 0, 0)',\n        },\n        pointLabels: {\n          font: {\n            size: 14,\n            weight: 'bold',\n            family: \"'Gill Sans', Tahoma, Geneva, Verdana, sans-serif\"\n          },\n          color: '#333'\n        }\n      },\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n        labels: {\n          font: {\n            size: 15\n          }\n        }\n      },\n    },\n  };\n\n  return (\n    <div className=\"chart\" style={{ height: '400px' }}>\n      <Radar data={data} options={options} />\n    </div>\n  );\n};\n\nexport default SpiderChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SACEC,KAAK,IAAIC,OAAO,EAChBC,iBAAiB,EACjBC,YAAY,EACZC,WAAW,EACXC,MAAM,EACNC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElBR,OAAO,CAACS,QAAQ,CACdR,iBAAiB,EACjBC,YAAY,EACZC,WAAW,EACXC,MAAM,EACNC,OAAO,EACPC,MACF,CAAC;AAED,MAAMI,WAAW,GAAGA,CAAC;EAAEC,aAAa;EAAEC,eAAe;EAAEC;AAAW,CAAC,KAAK;EACtE,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAEF,UAAU;IAClBG,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,eAAe;MACtBH,IAAI,EAAED,UAAU,CAACK,GAAG,CAAEC,GAAG,IAAKR,aAAa,CAACQ,GAAG,CAAC,CAAC;MACjDC,eAAe,EAAE,yBAAyB;MAC1CC,WAAW,EAAE,uBAAuB;MACpCC,oBAAoB,EAAE;IACxB,CAAC,EACD;MACEL,KAAK,EAAE,iBAAiB;MACxBH,IAAI,EAAED,UAAU,CAACK,GAAG,CAAEC,GAAG,IAAKP,eAAe,CAACO,GAAG,CAAC,CAAC;MACnDC,eAAe,EAAE,yBAAyB;MAC1CC,WAAW,EAAE,uBAAuB;MACpCC,oBAAoB,EAAE;IACxB,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAC1BC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE,CAAC;QACNC,KAAK,EAAE;UACLC,QAAQ,EAAE,CAAC;UACXC,aAAa,EAAE;QACjB,CAAC;QACDC,WAAW,EAAE;UACXC,IAAI,EAAE;YACJC,IAAI,EAAE,EAAE;YACRC,MAAM,EAAE,MAAM;YACdC,MAAM,EAAE;UACV,CAAC;UACDC,KAAK,EAAE;QACT;MACF;IACF,CAAC;IACDC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE,KAAK;QACf1B,MAAM,EAAE;UACNmB,IAAI,EAAE;YACJC,IAAI,EAAE;UACR;QACF;MACF;IACF;EACF,CAAC;EAED,oBACE3B,OAAA;IAAKkC,SAAS,EAAC,OAAO;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAChDrC,OAAA,CAACV,KAAK;MAACgB,IAAI,EAAEA,IAAK;MAACS,OAAO,EAAEA;IAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;AAACC,EAAA,GA3DIxC,WAAW;AA6DjB,eAAeA,WAAW;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}